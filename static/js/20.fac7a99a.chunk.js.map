{"version":3,"sources":["components/Commit/index.jsx","components/Commit/index.module.less","components/CommitList/commitList.module.less","services/comment.js","components/CommitList/Item.jsx","components/CommitList/CommitList.jsx","pages/Find/modules/playListDetail/TableItem.jsx","pages/Find/modules/topList/left.module.less","pages/Find/modules/topList/right.module.less","pages/Find/modules/topList/TopLeftNav.jsx","pages/Find/modules/topList/RightContent.jsx","pages/Find/modules/topList/TopList.jsx"],"names":["connect","state","user","props","useState","showEmoji","setShowEmoji","commitText","setCommitText","onEmojiClick","useCallback","e","emo","className","style","commit","id","commitNum","src","avatarUrl","alt","placeholder","value","onChange","val","maxCount","commitLength","onClick","Toast","warning","content","duration","module","exports","comment","a","t","type","commentId","timestamp","ins","post","res","likeComment","cid","threadId","c","to","userId","height","debounce","width","nickname","beReplied","length","map","be","beRepliedCommentId","timeStr","delComment","liked","commentLike","likedCount","CommitList","total","comments","hotComments","like","del","song","dispatch","addSong","addSongAction","item","index","showAlbum","play","getMusicPlayUrl","code","data","url","localStorage","setItem","JSON","stringify","utils","isEven","name","alia","mv","formatTime","dt","ar","i","al","TopLeftNav","firstNav","setFirstNav","secondNav","setSecondNav","useEffect","getTop","then","list","splice","n","updateFrequency","coverImgUrl","RightContent","setComments","setHotComments","page","setPage","limit","setLimit","setTotal","loading","setLoading","detail","text","playListCommit","Date","now","success","getComments","handlePageChange","handleLimitChange","getPlayListCommit","offset","error","formatDate","updateTime","icon","subscribedCount","shareCount","goAnchor","commentCount","trackCount","playCount","tracks","TableItem","Commit","currentPage","onPageChange","showSizeChanger","pageSize","pageSizeOpts","onPageSizeChange","spinning","tip","size","position","top","left","transform","zIndex","TopList","location","useLocation","search","qs","parse","listDetail","setListDetail","getPlayListDetail","playlist","margin","border","display"],"mappings":"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","file":"static/js/20.fac7a99a.chunk.js","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./index.module.less\";\r\nimport { TextArea, Button, Toast } from \"@douyinfe/semi-ui\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { IconImage } from \"@douyinfe/semi-icons\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nfunction Commit(props) {\r\n  const user = props.user;\r\n  const [showEmoji, setShowEmoji] = useState(false);\r\n  const [commitText, setCommitText] = useState(\"\");// 评论内容\r\n//   const [emoText, setEmoText] = useState(\"\"); // 选择的emoji\r\n  const onEmojiClick = useCallback((e, emo) => {\r\n    //   setEmoText(emo.emoji);\r\n    //   setCommitText(emo.names[0] + commitText);\r\n  }, []);\r\n  const handleValueChange = (val) => {\r\n    setCommitText(val);\r\n  }\r\n  const showEmojiSelect = () => {\r\n    setShowEmoji(!showEmoji);\r\n  };\r\n  const commit = () => {\r\n      if(!commitText) {\r\n        Toast.warning({\r\n            content: \"请先输入内容哦😊\",\r\n            duration: 2\r\n        });\r\n        return;\r\n      }\r\n    // 回传给父组件\r\n      setCommitText(\"\"); // 输入框清空\r\n      props.commit && props.commit(commitText)\r\n  }\r\n  return (\r\n    <div className={style.commit} id=\"comment\">\r\n      <div className=\"commit-header\">\r\n        <h3 className=\"title\">评论</h3>\r\n        <span className=\"nums\">共{props.commitNum}条评论</span>\r\n      </div>\r\n      <div className=\"commit-wrap\">\r\n        <img src={user ? user.avatarUrl : 'http://s4.music.126.net/style/web2/img/default/default_avatar.jpg?param=50y50'} alt=\"\" />\r\n        <div className=\"commit-content\">\r\n          <TextArea placeholder=\"评论\" value={commitText} onChange={handleValueChange} maxCount={props.commitLength}></TextArea>\r\n          <div className=\"commit-opearte\">\r\n            <IconImage onClick={showEmojiSelect} />\r\n            <Button onClick={commit}>评论</Button>\r\n          </div>\r\n          {showEmoji ? (\r\n            <div className=\"emoji-box\">\r\n              <Picker onEmojiClick={onEmojiClick} />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCommit.propTypes = {\r\n  commitNum: PropTypes.number, // 评论数量\r\n  commitLength: PropTypes.number, // 评论内容限制长度\r\n};\r\n\r\nexport default connect(mapStateToProps)(Commit);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commit\":\"index_commit__2Pc8Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment-list\":\"commitList_comment-list__V9s6g\"};","import ins from \"./request\";\r\n\r\n/**\r\n * 新版获取评论列表\r\n * 资源 id, 如歌曲 id,mv id\r\n * type: 数字  0: 歌曲 1: mv 2: 歌单 3: 专辑 4: 电台 5: 视频 6: 动态\r\n * pageNo:分页参数,第 N 页,默认为 1\r\n * pageSize:分页参数,每页多少条数据,默认 20\r\n * sortType: 排序方式, 1:按推荐排序, 2:按热度排序, 3:按时间排序\r\n * cursor: 当sortType为 3 时且页数不是第一页时需传入,值为上一条数据的 time\r\n */\r\nexport async function getCommentList({id, type, pageNo = 1, pageSize = 20, timestamp}) {\r\n    const res = await ins.get(\"/comment/new\", {\r\n        params: {\r\n            id,\r\n            type, \r\n            pageNo, \r\n            pageSize,\r\n            timestamp\r\n        }\r\n    });\r\n    return res;\r\n};\r\n\r\n/**\r\n * 发送（回复）评论\r\n */\r\nexport async function comment({t, type, id, content, commentId, timestamp}) {\r\n    const res = await ins.post(\"/comment\", {\r\n            t, type, id, content, commentId, timestamp\r\n    });\r\n    return res;\r\n};\r\n\r\n// 给评论点赞\r\nexport async function likeComment({id, cid, t, type, threadId, timestamp }) {\r\n    const res = await ins.post(\"/comment/like\", {\r\n        id, cid, t, type, threadId, timestamp\r\n    });\r\n    return res;\r\n};\r\n","import React from \"react\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IconLikeThumb } from \"@douyinfe/semi-icons\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n};\r\n\r\nfunction Item(props) {\r\n\tconst { c, user } = props;\r\n\treturn (\r\n\t\t<li className=\"comment-item\" key={c.commentId}>\r\n\t\t\t<Link to={\"/user/home?uid=\" + c.user.userId}>\r\n\t\t\t\t<LazyLoad height={50} debounce={500} placeholder={<img width={50} height={50} src=\"http://s4.music.126.net/style/web2/img/default/default_avatar.jpg?param=50y50\" />}>\r\n\t\t\t\t\t<img src={c.user.avatarUrl} alt=\"\" />\r\n\t\t\t\t</LazyLoad>\r\n\t\t\t</Link>\r\n\t\t\t<div className=\"comment-desc\">\r\n\t\t\t\t<p className=\"comment-content\">\r\n\t\t\t\t\t<Link className=\"name\" to={\"/user/home?uid=\" + c.user.userId}>\r\n\t\t\t\t\t\t{c.user.nickname}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<span className=\"divider\">:</span>\r\n\t\t\t\t\t<span className=\"content\">{c.content}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t{/* 回复评论列表 */}\r\n\t\t\t\t{c.beReplied.length\r\n\t\t\t\t\t? c.beReplied.map((be) => (\r\n\t\t\t\t\t\t<div key={be.beRepliedCommentId} className=\"beReplied\">\r\n\t\t\t\t\t\t\t<p className=\"comment-content\">\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tclassName=\"name\"\r\n\t\t\t\t\t\t\t\t\tto={\"/user/home?uid=\" + be.user.userId}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{be.user.nickname}\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t<span className=\"divider\">:</span>\r\n\t\t\t\t\t\t\t\t<span className=\"content\">{be.content}</span>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t\t: null}\r\n\t\t\t\t<div className=\"comment-points\">\r\n\t\t\t\t\t<span className=\"time\">{c.timeStr}</span>\r\n\t\t\t\t\t<div className=\"operate\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tuser && c.user.userId === user.userId ? <span className=\"del-wrap\">\r\n\t\t\t\t\t\t\t\t<span className=\"reback\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\tprops.delComment && props.delComment(c.commentId)\r\n\t\t\t\t\t\t\t\t}}>删除</span>\r\n\t\t\t\t\t\t\t\t<span className=\"line\">|</span>\r\n\t\t\t\t\t\t\t</span> : null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<span className={c.liked ? 'like liked' : 'like'} onClick={() => {\r\n\t\t\t\t\t\t\tprops.commentLike && props.commentLike(c.commentId, c.liked)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<IconLikeThumb />\r\n\t\t\t\t\t\t\t{c.likedCount ? (\r\n\t\t\t\t\t\t\t\t<span className=\"num\">({c.likedCount})</span>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"line\">|</span>\r\n\t\t\t\t\t\t<span className=\"reback\">回复</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Item);\r\n","import React from \"react\";\r\nimport style from \"./commitList.module.less\";\r\nimport Item from \"./Item\"\r\n\r\nexport default function CommitList(props) {\r\n  const { total, comments, hotComments } = props;\r\n  const commentLike = (cid, liked) => {\r\n      props.like && props.like(cid, liked);\r\n  };\r\n  const delComment = (cid) => {\r\n      props.del && props.del(cid);\r\n  };\r\n  return (\r\n    <div className={style[\"comment-list\"]}>\r\n      {hotComments && hotComments.length ? (\r\n        <ul className=\"comment\">\r\n          <li className=\"header\">\r\n            <h3 className=\"title\">精彩评论</h3>\r\n          </li>\r\n          {hotComments.map((c) => (\r\n            <Item commentLike={commentLike} delComment={delComment} key={c.commentId} c={c}></Item>\r\n          ))}\r\n        </ul>\r\n      ) : null}\r\n      <br />\r\n      <br />\r\n      {comments && comments.length ? (\r\n        <ul className=\"comment\">\r\n          <li className=\"header\">\r\n            <h3 className=\"title\">最新评论({total})</h3>\r\n          </li>\r\n          {comments.map((c) => (\r\n            <Item commentLike={commentLike} delComment={delComment} key={c.commentId} c={c}></Item>\r\n          ))}\r\n        </ul>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./tableItem.less\";\r\nimport utils from \"../../../../utils\";\r\nimport { IconPlayCircle, IconPlus, IconFolder, IconForward, IconDownload, IconVideo } from \"@douyinfe/semi-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getMusicPlayUrl } from \"../../../../services/apis\";\r\nimport { connect } from \"react-redux\";\r\nimport { addSongAction } from \"../../../../store/actions/song\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    song: state.song\r\n  }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addSong: (...args) => dispatch(addSongAction(...args)),\r\n  };\r\n};\r\nfunction TableItem(props) {\r\n  const { item, index, showAlbum, addSong } = props;\r\n  // 播放歌曲\r\n  const play = async (id) => {\r\n    const res = await getMusicPlayUrl({ id });\r\n    if (res.code === 200) {\r\n      addSong(res.data[0].url);\r\n      localStorage.setItem(\"song_url\", JSON.stringify(res.data[0].url));\r\n    }\r\n  };\r\n  return (\r\n    <li className={utils.isEven(index) ? \"table-item even\" : \"table-item\"}>\r\n      <div className=\"play-num bd\">\r\n        <span className=\"num\">{index}</span>\r\n        <IconPlayCircle onClick={() => {\r\n          play(item.id)\r\n        }} />\r\n      </div>\r\n      <div className=\"title bd ellipsis-1\">\r\n        <Link to={'/find/song?id=' + item.id}>{item.name}</Link>\r\n        {item.alia && item.alia.length ?\r\n          <span className=\"mv-name\">-{item.alia.map(a => a)}</span>\r\n          : null}\r\n        {item.mv ? <Link className=\"mv-play\" to={'/find/mv?id=' + item.mv}><IconVideo /></Link> : null}\r\n      </div>\r\n      <div className=\"duration bd\">\r\n        <span className=\"time\">{utils.formatTime(item.dt)}</span>\r\n        <div className=\"btns\">\r\n          <IconPlus />\r\n          <IconFolder />\r\n          <IconForward />\r\n          <IconDownload />\r\n        </div>\r\n      </div>\r\n      <div className=\"name bd ellipsis-1\">\r\n        {item.ar.map((e, i) => (\r\n          <Link to={'/find/artist?id=' + e.id} key={e.id + i}>{i === 0 ? e.name : `/${e.name}`}</Link>\r\n        ))}\r\n      </div>\r\n      {showAlbum ? <div className=\"album bd ellipsis-1\"><Link to={'/find/album?id=' + item.al.id}>{item.al.name}</Link></div> : null}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableItem);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top-left-nav\":\"left_top-left-nav__32_h0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"right-content\":\"right_right-content__3bW3B\"};","import React, { useEffect, useState } from 'react';\r\nimport style from \"./left.module.less\";\r\nimport { getTop } from '../../../../services/apis';\r\nimport {Link} from \"react-router-dom\";\r\nimport LazyLoad from 'react-lazyload';\r\n\r\nexport default function TopLeftNav(props) {\r\n    const [firstNav, setFirstNav] = useState([]);\r\n    const [secondNav, setSecondNav] = useState([]);\r\n    const id = props.id\r\n    useEffect(() => {\r\n        getTop().then(res => {\r\n            if (res.code === 200) {\r\n                setFirstNav(res.list.splice(0, 4));\r\n                setSecondNav(res.list.splice(4));\r\n            }\r\n        })\r\n        return () => {\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className={style['top-left-nav']}>\r\n            <dl className=\"list\">\r\n                <dt className=\"title\">云音乐特色榜</dt>\r\n                {firstNav.length ? firstNav.map(n => <Link to={`/find/toplist?id=${n.id}&text=${n.updateFrequency}`} key={n.id} ><dd className={n.id == id ? 'row active' : 'row'}>\r\n                    <LazyLoad>\r\n                        <img src={n.coverImgUrl} alt=\"\" />\r\n                    </LazyLoad>\r\n                    <div className=\"content\">\r\n                        <div className=\"name\">{n.name}</div>\r\n                        <p className=\"desc\">{n.updateFrequency}</p>\r\n                    </div>\r\n                </dd></Link>) : null}\r\n            </dl>\r\n            <dl className=\"list mt20\">\r\n                <dt className=\"title\">云音乐特色榜</dt>\r\n                {secondNav.length ? secondNav.map(n => <Link to={`/find/toplist?id=${n.id}&text=${n.updateFrequency}`} key={n.id} ><dd className={n.id == id ? 'row active' : 'row'}>\r\n                    <img src={n.coverImgUrl} alt=\"\" />\r\n                    <div className=\"content\">\r\n                        <div className=\"name\">{n.name}</div>\r\n                        <p className=\"desc\">{n.updateFrequency}</p>\r\n                    </div>\r\n                </dd></Link>) : null}\r\n            </dl>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport style from \"./right.module.less\";\r\nimport utils from '../../../../utils';\r\nimport { Button, Space, Toast, Pagination, Spin } from \"@douyinfe/semi-ui\";\r\nimport {\r\n    //   IconPlayCircle,\r\n    IconPlus,\r\n    IconForward,\r\n    IconDownload,\r\n    IconComment,\r\n    IconClock,\r\n} from \"@douyinfe/semi-icons\";\r\nimport TableItem from \"../playListDetail/TableItem\";\r\nimport Commit from \"../../../../components/Commit\";\r\nimport CommitList from \"../../../../components/CommitList/CommitList\";\r\nimport { comment, likeComment } from \"../../../../services/comment\";\r\nimport { getPlayListCommit } from \"../../../../services/apis\";\r\n\r\nexport default function RightContent(props) {\r\n    const [comments, setComments] = useState([]); // 评论列表\r\n    const [hotComments, setHotComments] = useState([]); // 热门评论列表\r\n    const [page, setPage] = useState(1); // 评论列表\r\n    const [limit, setLimit] = useState(20); // 页容量\r\n    const [total, setTotal] = useState(0); // 总评论数\r\n    const [loading, setLoading] = useState(false); // loading\r\n    const {detail, id, text} = props;\r\n\r\n    // 提交评论\r\n    const playListCommit = useCallback(async (val) => {\r\n        const res = await comment({\r\n            t: 1,\r\n            type: 2,\r\n            id: id,\r\n            content: val,\r\n            timestamp: Date.now(),\r\n        });\r\n        if (res.code === 200) {\r\n            Toast.success({\r\n                content: \"评论成功\",\r\n                duration: 2,\r\n            });\r\n            getComments();\r\n        }\r\n    }, []);\r\n    // 页码变化\r\n    const handlePageChange = useCallback((page) => {\r\n        setPage(page);\r\n    }, []);\r\n    // 页容量变化\r\n    const handleLimitChange = useCallback((limit) => {\r\n        setLimit(limit);\r\n    }, []);\r\n    const getComments = async () => {\r\n        setLoading(true);\r\n        const res = await getPlayListCommit({\r\n            id: id,\r\n            limit,\r\n            offset: (page - 1) * limit,\r\n            timestamp: Date.now(),\r\n        });\r\n        if (res.code === 200) {\r\n            setTotal(res.total);\r\n            setComments(res.comments);\r\n            setHotComments(res.hotComments);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    // 获取评论列表\r\n    useEffect(() => {\r\n        getComments();\r\n        return () => { };\r\n    }, [id, limit, page]);\r\n\r\n    // 点赞评论\r\n    const like = useCallback(\r\n        async (cid, liked) => {\r\n            const res = await likeComment({\r\n                id,\r\n                cid,\r\n                t: liked ? 0 : 1,\r\n                type: 2,\r\n                timestamp: Date.now(),\r\n            });\r\n            if (res.code === 200) {\r\n                if (liked) {\r\n                    Toast.success({\r\n                        content: \"取消赞成功\",\r\n                        duration: 2,\r\n                    })\r\n                } else {\r\n                    Toast.success({\r\n                        content: \"赞成功\",\r\n                        duration: 2,\r\n                    })\r\n                }\r\n                getComments();\r\n            } else {\r\n                Toast.error({\r\n                    content: \"操作失败\"\r\n                })\r\n            }\r\n        },\r\n        [],\r\n    );\r\n\r\n    // 删除评论\r\n    const del = async (cid) => {\r\n        const res = await comment({\r\n            t: 0,\r\n            type: 2,\r\n            id: id,\r\n            commentId: cid,\r\n            timestamp: Date.now(),\r\n        });\r\n        if (res.code === 200) {\r\n            Toast.success({\r\n                content: \"删除成功\",\r\n                duration: 2,\r\n            });\r\n            getComments();\r\n        }\r\n    }\r\n    return (\r\n        <div className={style['right-content']}>\r\n            <div className=\"top-content\">\r\n                <div className=\"img\">\r\n                    <img src={detail.coverImgUrl} alt=\"\" />\r\n                </div>\r\n                <div className=\"list-content\">\r\n                    <div className=\"list-name\">{detail.name}</div>\r\n                    <div className=\"create-desc\">\r\n                        <IconClock />\r\n                        最近更新：\r\n                        {utils.formatDate(detail.updateTime)}\r\n                        （{text}）\r\n                    </div>\r\n                    <div className=\"operates\">\r\n                        <Space>\r\n                            {/* <Button icon={<IconPlayCircle />}>播放</Button> */}\r\n                            <Button type=\"tertiary\" icon={<IconPlus />}>\r\n                                ({detail.subscribedCount})\r\n                            </Button>\r\n                            <Button type=\"tertiary\" icon={<IconForward />}>\r\n                                ({detail.shareCount})\r\n                            </Button>\r\n                            <Button type=\"tertiary\" icon={<IconDownload />}>\r\n                                下载\r\n                            </Button>\r\n                            <Button type=\"tertiary\" icon={<IconComment />} onClick={() => {\r\n                                utils.goAnchor(\"#comment\");\r\n                            }}>\r\n                                ({detail.commentCount})\r\n                            </Button>\r\n                        </Space>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"music-list\">\r\n                <div className=\"list-header\">\r\n                    <h3 className=\"title\">歌曲列表</h3>\r\n                    <span className=\"total\">{detail.trackCount}首歌</span>\r\n                    <span className=\"play-num\">\r\n                        播放：<span className=\"num\">{detail.playCount}</span>次\r\n                    </span>\r\n                </div>\r\n                <ul className=\"list-wrap\">\r\n                    <li className=\"table-header\">\r\n                        <div className=\"play-num\"></div>\r\n                        <div className=\"title bd\">标题</div>\r\n                        <div className=\"duration bd\">时长</div>\r\n                        <div className=\"name bd\">歌手</div>\r\n                    </li>\r\n                    {detail.tracks.map((t, i) => (\r\n                        <TableItem showAlbum={false} key={t.id} index={i + 1} item={t} />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <Commit\r\n                commitNum={detail.commentCount}\r\n                commit={playListCommit}\r\n                commitLength={140}\r\n            />\r\n            <CommitList like={like} del={del} total={total} comments={comments} hotComments={hotComments} />\r\n            {total > 0 ? (\r\n                <div className=\"pagination-wrapper\">\r\n                    <Pagination\r\n                        total={total}\r\n                        currentPage={page}\r\n                        onPageChange={handlePageChange}\r\n                        showSizeChanger\r\n                        pageSize={limit}\r\n                        pageSizeOpts={[20, 30, 50]}\r\n                        onPageSizeChange={handleLimitChange}\r\n                    ></Pagination>\r\n                </div>\r\n            ) : null}\r\n            <Spin\r\n                spinning={loading}\r\n                tip=\"loading...\"\r\n                size=\"large\"\r\n                style={{\r\n                    position: \"fixed\",\r\n                    top: \"50%\",\r\n                    left: \"50%\",\r\n                    transform: \"translate(-50%, -50%)\",\r\n                    zIndex: \"9999\",\r\n                }}\r\n            ></Spin>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState } from 'react';\r\nimport { getPlayListDetail } from \"../../../../services/apis\"\r\nimport TopLeftNav from './TopLeftNav';\r\nimport RightContent from './RightContent';\r\nimport qs from \"query-string\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function TopList() {\r\n    const location = useLocation();\r\n    const id = location.search ? qs.parse(location.search).id : '19723756';\r\n    const text = location.search ? qs.parse(location.search).text : '刚刚更新';\r\n    const [listDetail, setListDetail] = useState(null);\r\n    useEffect(() => {\r\n        getPlayListDetail({id}).then(res => {\r\n            if(res.code === 200) {\r\n                setListDetail(res.playlist);\r\n            }\r\n        })\r\n        return () => {\r\n        }\r\n    }, [id])\r\n    return (\r\n        <div className=\"top-list-container\" style={{\r\n            width: 980,\r\n            margin: '0 auto',\r\n            border: '1px solid #ddd',\r\n            display: 'flex',\r\n        }}>\r\n            <TopLeftNav id={id} />\r\n           {listDetail ? <RightContent detail={listDetail} id={id} text={text} /> : null }\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}
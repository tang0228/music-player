{"version":3,"sources":["pages/User/modules/user-update/UserUpdate.jsx"],"names":["tabs","text","key","connect","state","user","dispatch","addUser","addUserAction","props","uid","userId","useState","gender","sex","setSex","nickname","name","setName","birthday","birth","setBirth","signature","intro","setIntro","handleValueChange","useCallback","val","textChange","handleRadioChange","e","target","value","dateChange","date","dateStr","time","Date","getTime","save","a","updateUserInfo","city","province","code","Toast","success","content","duration","getUserDetail","r","profile","localStorage","setItem","JSON","stringify","tabpanes","map","tab","itemKey","className","type","defaultActiveKey","onChange","maxCount","showCounter","showClear","onClick","src","avatarUrl","alt"],"mappings":"qPAkBMA,EAAO,CACX,CAAEC,KAAM,2BAAQC,IAAK,KACrB,CAAED,KAAM,2BAAQC,IAAK,KACrB,CAAED,KAAM,2BAAQC,IAAK,MAoHRC,uBAjHS,SAACC,GACvB,MAAO,CACLC,KAAMD,EAAMC,SAGW,SAACC,GAC1B,MAAO,CACLC,QAAS,kBAAaD,EAASE,IAAa,WAAb,kBA0GpBL,EAtGf,SAAoBM,GAClB,IAAQJ,EAAkBI,EAAlBJ,KAAME,EAAYE,EAAZF,QACRG,EAAML,EAAKM,OACjB,EAAsBC,mBAASP,EAAKQ,QAApC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAwBH,mBAASP,EAAKW,UAAtC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BN,mBAASP,EAAKc,UAAxC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BT,mBAASP,EAAKiB,WAAxC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAoBC,uBAAY,SAACC,GACrCT,EAAQS,KACP,IACGC,EAAaF,uBAAY,SAACC,GAC9BH,EAASG,KACR,IAEGE,EAAoBH,uBAAY,SAACI,GACrCf,EAAOe,EAAEC,OAAOC,SACf,IAEGC,EAAaP,uBAAY,SAACQ,EAAMC,GACpC,IAAMC,EAAO,IAAIC,KAAKF,GAASG,UAC/BjB,EAASe,KACR,IAEGG,EAAOb,sBAAW,sBAAC,4BAAAc,EAAA,sEACLC,YAAe,CAC/B5B,OAAQC,EACRE,SAAUC,EACVE,SAAUC,EACVE,UAAWC,EACXmB,KAAM,OACNC,SAAU,OAPW,UASN,MATM,OASfC,KATe,uBAUrBC,IAAMC,QAAQ,CACZC,QAAS,2BACTC,SAAU,IAZS,SAcLC,YAAc,CAC5BvC,QAfmB,OAiBN,OAHTwC,EAde,QAiBfN,OAEJrC,EAAQ2C,EAAEC,SACVC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUL,EAAEC,WApB3B,2CAuBtB,CAACrC,EAAKG,EAAMG,EAAOG,EAAOb,IACvB8C,EAAWxD,EAAKyD,KAAI,SAACC,GAAD,OACxB,cAAC,IAAD,CAAuBA,IAAKA,EAAIzD,KAAM0D,QAASD,EAAIxD,KAArCwD,EAAIxD,QAEpB,OACE,sBAAK0D,UAAU,wBAAf,UACE,oBAAIA,UAAU,QAAd,sCACA,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,CAAMC,KAAK,OAAOC,iBAAiB,IAAnC,SACGN,MAGL,sBAAKI,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,MAAf,UACE,sBAAMA,UAAU,QAAhB,2BACA,cAAC,IAAD,CAAO5B,MAAOf,EAAM8C,SAAUtC,OAEhC,sBAAKmC,UAAU,MAAf,UACE,sBAAMA,UAAU,QAAhB,2BACA,cAAC,IAAD,CACE5B,MAAOT,EACPyC,SAAU,IACVC,aAAW,EACXF,SAAUnC,OAGd,sBAAKgC,UAAU,MAAf,UACE,sBAAMA,UAAU,QAAhB,2BACA,eAAC,IAAD,CAAY5B,MAAOlB,EAAKiD,SAAUlC,EAAlC,UACE,cAAC,IAAD,CAAOG,MAAO,EAAd,oBACA,cAAC,IAAD,CAAOA,MAAO,EAAd,oBACA,cAAC,IAAD,CAAOA,MAAO,EAAd,gCAGJ,sBAAK4B,UAAU,MAAf,UACE,sBAAMA,UAAU,QAAhB,2BACA,cAAC,IAAD,CACE5B,MAAOZ,EACP2C,SAAU9B,EACViC,WAAW,OAGf,qBAAKN,UAAU,WAAf,SACE,cAAC,IAAD,CAAQO,QAAS5B,EAAjB,+BAGJ,sBAAKqB,UAAU,cAAf,UACE,qBAAKQ,IAAK/D,EAAKgE,UAAWC,IAAI,KAC9B,sBAAMV,UAAU,KAAhB","file":"static/js/30.7e88370d.chunk.js","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport \"./userUpdate.less\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Tabs,\r\n  TabPane,\r\n  Input,\r\n  TextArea,\r\n  RadioGroup,\r\n  Radio,\r\n  DatePicker,\r\n  Button,\r\n  Toast,\r\n} from \"@douyinfe/semi-ui\";\r\nimport { updateUserInfo, getUserDetail } from \"../../../../services/apis\";\r\nimport { addUserAction } from \"../../../../store/actions/user\";\r\n\r\n// 搜索的tabs\r\nconst tabs = [\r\n  { text: \"基本设置\", key: \"1\" },\r\n  { text: \"绑定设置\", key: \"2\" },\r\n  { text: \"隐私设置\", key: \"3\" },\r\n];\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addUser: (...args) => dispatch(addUserAction(...args)),\r\n  };\r\n};\r\n\r\nfunction UserUpdate(props) {\r\n  const { user, addUser } = props;\r\n  const uid = user.userId;\r\n  const [sex, setSex] = useState(user.gender); // 性别\r\n  const [name, setName] = useState(user.nickname); // 昵称\r\n  const [birth, setBirth] = useState(user.birthday); // 生日\r\n  const [intro, setIntro] = useState(user.signature); // 介绍\r\n  const handleValueChange = useCallback((val) => {\r\n    setName(val);\r\n  }, []);\r\n  const textChange = useCallback((val) => {\r\n    setIntro(val);\r\n  }, []);\r\n  // 切花性别 radio\r\n  const handleRadioChange = useCallback((e) => {\r\n    setSex(e.target.value);\r\n  }, []);\r\n  // 日期改变\r\n  const dateChange = useCallback((date, dateStr) => {\r\n    const time = new Date(dateStr).getTime();\r\n    setBirth(time);\r\n  }, []);\r\n  // 保存\r\n  const save = useCallback(async () => {\r\n    const res = await updateUserInfo({\r\n      gender: sex,\r\n      nickname: name,\r\n      birthday: birth,\r\n      signature: intro,\r\n      city: 330100,\r\n      province: 330000,\r\n    });\r\n    if (res.code === 200) {\r\n      Toast.success({\r\n        content: \"保存成功\",\r\n        duration: 2,\r\n      });\r\n      const r = await getUserDetail({\r\n        uid,\r\n      });\r\n      if (r.code === 200) {\r\n        // 更新用户信息 本地\r\n        addUser(r.profile);\r\n        localStorage.setItem(\"user\", JSON.stringify(r.profile));\r\n      }\r\n    }\r\n  }, [sex, name, birth, intro, uid]);\r\n  const tabpanes = tabs.map((tab) => (\r\n    <TabPane key={tab.key} tab={tab.text} itemKey={tab.key}></TabPane>\r\n  ));\r\n  return (\r\n    <div className=\"user-update-container\">\r\n      <h2 className=\"title\">个人设置</h2>\r\n      <div className=\"user-tabs\">\r\n        <Tabs type=\"card\" defaultActiveKey=\"1\">\r\n          {tabpanes}\r\n        </Tabs>\r\n      </div>\r\n      <div className=\"user-box\">\r\n        <div className=\"update-wrap\">\r\n          <div className=\"row\">\r\n            <span className=\"label\">昵称:</span>\r\n            <Input value={name} onChange={handleValueChange}></Input>\r\n          </div>\r\n          <div className=\"row\">\r\n            <span className=\"label\">介绍:</span>\r\n            <TextArea\r\n              value={intro}\r\n              maxCount={300}\r\n              showCounter\r\n              onChange={textChange}\r\n            ></TextArea>\r\n          </div>\r\n          <div className=\"row\">\r\n            <span className=\"label\">性别:</span>\r\n            <RadioGroup value={sex} onChange={handleRadioChange}>\r\n              <Radio value={1}>男</Radio>\r\n              <Radio value={2}>女</Radio>\r\n              <Radio value={0}>保密</Radio>\r\n            </RadioGroup>\r\n          </div>\r\n          <div className=\"row\">\r\n            <span className=\"label\">生日:</span>\r\n            <DatePicker\r\n              value={birth}\r\n              onChange={dateChange}\r\n              showClear={false}\r\n            ></DatePicker>\r\n          </div>\r\n          <div className=\"btn-wrap\">\r\n            <Button onClick={save}>保存</Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"user-avatar\">\r\n          <img src={user.avatarUrl} alt=\"\" />\r\n          <span className=\"bg\">更换头像</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserUpdate);\r\n"],"sourceRoot":""}
{"version":3,"sources":["pages/User/modules/user-home/playItem.module.less","pages/User/modules/user-home/RecordItem.jsx","pages/User/modules/user-home/PlayItem.jsx","pages/User/modules/user-home/UserHome.jsx","assets/loading.svg"],"names":["module","exports","connect","state","song","dispatch","addSong","addSongAction","setCurSongId","setCurSongIdAction","props","record","index","showNum","play","id","a","getMusicPlayUrl","res","code","data","url","className","utils","isEven","onClick","to","name","ar","map","i","style","width","score","playCount","curSongId","addSongs","addSongListAction","history","useHistory","item","title","height","debounce","placeholder","src","loadingUrl","coverImgUrl","alt","getPlayListDetail","then","Toast","success","content","duration","list","playlist","tracks","t","parseInt","push","user","location","useLocation","uid","qs","parse","search","useState","userInfo","setUserInfo","type","setType","recordList","setRecordList","playList","setPlayList","likePlayList","setLikePlayList","useEffect","getUserDetail","getUserRecord","weekData","allData","getUserPlayList","filter","p","userId","profile","avatarUrl","nickname","gender","level","icon","eventCount","follows","followeds","signature","length","padding","slice","r"],"mappings":"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","file":"static/js/29.35b8e6c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"play-item-wrap\":\"playItem_play-item-wrap__1AazK\"};","import React from \"react\";\r\nimport \"./recordItem.less\";\r\nimport {\r\n\tIconPlayCircle,\r\n\tIconPlus,\r\n\tIconFolder,\r\n\tIconForward,\r\n\tIconDownload,\r\n} from \"@douyinfe/semi-icons\";\r\nimport utils from \"../../../../utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getMusicPlayUrl } from \"../../../../services/apis\";\r\nimport { connect } from \"react-redux\";\r\nimport { addSongAction } from \"../../../../store/actions/song\";\r\nimport { setCurSongIdAction } from \"@/store/actions/curSongId\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tsong: state.song,\r\n\t}\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddSong: (...args) => dispatch(addSongAction(...args)),\r\n\t\tsetCurSongId: (...args) => dispatch(setCurSongIdAction(...args))\r\n\t}\r\n}\r\n\r\nfunction RecordItem(props) {\r\n\tconst { record, index, addSong, showNum, setCurSongId } = props;\r\n\t// 播放歌曲\r\n\tconst play = async (id) => {\r\n\t\tconst res = await getMusicPlayUrl({ id });\r\n\t\tsetCurSongId(id);\r\n\t\tif (res.code === 200 && res.data[0].url) {\r\n\t\t\taddSong(res.data);\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<li className={utils.isEven(index) ? \"record-item even\" : \"record-item\"}>\r\n\t\t\t<div className=\"hd\">\r\n\t\t\t\t<span className=\"hd-index\">{index}.</span>\r\n\t\t\t\t<i className=\"icon-play\" onClick={() => {\r\n\t\t\t\t\tplay(record.song.id)\r\n\t\t\t\t}}></i>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"singer\">\r\n\t\t\t\t<Link to={'/find/song?id=' + record.song.id} className=\"music-name\">{record.song.name}</Link>\r\n\t\t\t\t<span className=\"divider\">-</span>\r\n\t\t\t\t<span className=\"singer-name\">\r\n\t\t\t\t\t{record.song.ar.map((a, i) => (\r\n\t\t\t\t\t\t<Link className=\"name\" to={'/find/artist?id=' + a.id} key={a.name}>{i === 0 ? a.name : \"/\" + a.name}</Link>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"operates\">\r\n\t\t\t\t<i className=\"icon icon-add\"></i>\r\n\t\t\t\t<i className=\"icon icon-fav\"></i>\r\n\t\t\t\t<i className=\"icon icon-share\"></i>\r\n\t\t\t\t<i className=\"icon icon-down\"></i>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"tops\">\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName=\"bg\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: `${record.score}%`,\r\n\t\t\t\t\t}}\r\n\t\t\t\t></span>\r\n\t\t\t\t{showNum ? <span className=\"text\">{record.playCount}次</span> : null}\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordItem);\r\n","import React from \"react\";\r\nimport style from \"./playItem.module.less\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport loadingUrl from \"@/assets/loading.svg\";\r\nimport { getPlayListDetail } from \"@/services/apis\";\r\nimport { addSongListAction } from \"@/store/actions/song\";\r\nimport { setCurSongIdAction } from \"@/store/actions/curSongId\";\r\nimport { connect } from \"react-redux\";\r\nimport { Toast } from \"@douyinfe/semi-ui\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcurSongId: state.curSongId,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsetCurSongId: (...args) => dispatch(setCurSongIdAction(...args)),\r\n\t\taddSongs: (...args) => dispatch(addSongListAction(...args))\r\n\t};\r\n};\r\n\r\nfunction PlayItem(props) {\r\n\tconst history = useHistory();\r\n\tconst { setCurSongId, addSongs, item } = props;\r\n\t// 添加歌单到播放列表\r\n\tconst addSongList = () => {\r\n\t\tgetPlayListDetail({ id: item.id }).then(res => {\r\n\t\t\tif (res.code === 200) {\r\n\t\t\t\tToast.success({\r\n\t\t\t\t\tcontent: \"成功添加歌单到播放列表\",\r\n\t\t\t\t\tduration: 2\r\n\t\t\t\t});\r\n\t\t\t\tconst list = res.playlist.tracks.map(t => ({\r\n\t\t\t\t\tid: t.id,\r\n\t\t\t\t\turl: 'https://music.163.com/song/media/outer/url?id=' + t.id + '.mp3',\r\n\t\t\t\t\tsong: t\r\n\t\t\t\t}));\r\n\t\t\t\taddSongs(list);\r\n\t\t\t\tsetCurSongId(list[0].id);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\treturn (\r\n\t\t<div className={style[\"play-item-wrap\"]}>\r\n\t\t\t<div className=\"img-wrap\" title={item.name}>\r\n\t\t\t\t<Link to={\"/find/playlist/detail?id=\" + item.id}>\r\n\t\t\t\t\t<LazyLoad height={140} debounce={500} placeholder={<img src={loadingUrl} />}>\r\n\t\t\t\t\t\t<img src={item.coverImgUrl} alt=\"\" />\r\n\t\t\t\t\t\t<span className=\"mask\"></span>\r\n\t\t\t\t\t</LazyLoad>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className=\"bottom\">\r\n\t\t\t\t\t<i className=\"icon-heard\"></i>\r\n\t\t\t\t\t<i className=\"icon-play\" title=\"播放\" onClick={addSongList}></i>\r\n\t\t\t\t\t<span className=\"play-nums\">\r\n\t\t\t\t\t\t{item.playCount > 10000 ? parseInt(item.playCount / 10000) + '万' : item.playCount}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"name\" onClick={() => {\r\n\t\t\t\thistory.push(\"/find/playlist/detail?id=\" + item.id)\r\n\t\t\t}}>{item.name}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayItem);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport \"./userHome.less\";\r\nimport qs from \"query-string\";\r\nimport { getUserDetail, getUserRecord, getUserPlayList } from \"../../../../services/apis\";\r\nimport { Button, Popover } from \"@douyinfe/semi-ui\";\r\nimport { IconPlus, IconFemale, IconMale, IconComment, IconWeibo, IconInfoCircle, IconChevronRight } from \"@douyinfe/semi-icons\";\r\nimport RecordItem from './RecordItem';\r\nimport PlayItem from './PlayItem';\r\nimport { connect } from \"react-redux\";\r\nimport LazyLoad from 'react-lazyload';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n};\r\nfunction UserHome(props) {\r\n    const {user} = props;\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const uid = +qs.parse(location.search).uid; // 用户id\r\n    const [userInfo, setUserInfo] = useState(null); // 用户信息\r\n    const [type, setType] = useState(1); // week or all\r\n    const [recordList, setRecordList] = useState([]); // 播放记录\r\n    const [playList, setPlayList] = useState([]); // 用户的歌单\r\n    const [likePlayList, setLikePlayList] = useState([]); // 用户收藏的歌单\r\n\r\n    //获取用户信息\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await getUserDetail({\r\n                uid\r\n            });\r\n            if(res.code === 200) {\r\n                setUserInfo(res)\r\n            }\r\n        })();\r\n        return () => {\r\n        }\r\n    }, [uid]);\r\n\r\n    // 获取用户的播放记录\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await getUserRecord({\r\n                uid,\r\n                type,\r\n            });\r\n            if(res && res.code === 200) {\r\n                if(type === 1) {\r\n                    setRecordList(res.weekData);\r\n                } else if(type === 0) {\r\n                    setRecordList(res.allData);\r\n                }\r\n            } else {\r\n                setRecordList([]);\r\n            }\r\n        })();\r\n        return () => {\r\n        }\r\n    }, [uid, type]);\r\n\r\n    //获取用户歌单\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await getUserPlayList({\r\n                uid,\r\n            });\r\n            if(res.code === 200) {\r\n                let playList = res.playlist.filter(p => p.userId === uid);\r\n                let likePlayList = res.playlist.filter(p => p.userId !== uid);\r\n                setPlayList(playList);\r\n                setLikePlayList(likePlayList);\r\n            }\r\n        })();\r\n        return () => {\r\n        }\r\n    }, [uid])\r\n    return (\r\n        <div className=\"user-home-container\">\r\n            { userInfo ? <div className=\"user-info\">\r\n                <div className=\"img\">\r\n                    <LazyLoad>\r\n                        <img src={userInfo.profile.avatarUrl} alt=\"\" />\r\n                    </LazyLoad>\r\n                </div>\r\n                <div className=\"info-content\">\r\n                    <div className=\"name-wrap\">\r\n                        <span className=\"name\">{userInfo.profile.nickname}</span>\r\n                        <span className={userInfo.profile.gender === 1 ? 'level blue' : 'level pink'}>LV. {userInfo.level} {userInfo.profile.gender === 1 ? <IconMale /> : <IconFemale /> }</span>\r\n                        {user && user.userId === uid ? <Button type=\"tertiary\" onClick={() => {\r\n                            history.push(`/user/update?uid=${uid}`)\r\n                        }}>编辑个人资料</Button> : <div className=\"btns\">\r\n                            <Button icon={<IconComment />} type=\"tertiary\">发私信</Button>\r\n                            <Button icon={<IconPlus />} >关注</Button>\r\n                        </div>}\r\n                    </div>\r\n                    <div className=\"user-nums\">\r\n                        <div className=\"box\">\r\n                            <span>{userInfo.profile.eventCount}</span>\r\n                            <span>动态</span>\r\n                        </div>\r\n                        <div className=\"box\">\r\n                            <span>{userInfo.profile.follows}</span>\r\n                            <span>关注</span>\r\n                        </div>\r\n                        <div className=\"box\">\r\n                            <span>{userInfo.profile.followeds}</span>\r\n                            <span>粉丝</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"item\">个人介绍：{userInfo.profile.signature}</div>\r\n                    {/* <div className=\"user-city\">\r\n                        <span className=\"item\">所在地区：浙江省 - 杭州市</span>\r\n                        <span className=\"item\">年龄：00后</span>\r\n                    </div> */}\r\n                    <div className=\"item\">社交网络：<IconWeibo /></div>\r\n                </div>\r\n            </div> : null}\r\n            {/* 用户的播放记录，当前用户才可以访问 */}\r\n            {\r\n                recordList && recordList.length ? <>\r\n                <div className=\"record-header\">\r\n                    <h3>听歌排行</h3>\r\n                    <h4>累计听歌{recordList.length}首</h4>\r\n                    <Popover content={\r\n                        <div style={{\r\n                            padding: 12,\r\n                        }}>实际播放时间过短的歌曲将不纳入计算。</div>\r\n                    }>\r\n                        <IconInfoCircle />\r\n                    </Popover>\r\n                    <div className=\"nav\">\r\n                        <span className={type === 1 ? 'item active' : 'item'} onClick={()=>{\r\n                            setType(1);\r\n                        }}>最近一周</span>\r\n                        <span className=\"line\">|</span>\r\n                        <span className={type === 0 ? 'item active' : 'item'} onClick={() => {\r\n                            setType(0);\r\n                        }}>所有时间</span>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"record-list\">\r\n                    {recordList ? recordList.slice(0, 10).map((r, i) => <RecordItem key={r.song.id} record={r} index={i + 1} showNum={user.userId === uid}></RecordItem>) : null}\r\n                </ul>\r\n                <div className=\"more\">查看更多<IconChevronRight /></div>\r\n                </> : null\r\n            }\r\n            {/* 用户创建的歌单 */}\r\n            {\r\n                playList && playList.length ? <>\r\n                <div className=\"playlist\">\r\n                {userInfo ? (user && user.userId === uid ? '我' : userInfo.profile.nickname) : null}创建的歌单\r\n                <span className=\"r\"></span>\r\n                （{playList.length}）\r\n            </div>\r\n            <div className=\"list-wrap\">\r\n                {playList ? playList.map(p => <PlayItem item={p} key={p.id}></PlayItem>) : null}\r\n            </div>\r\n                </> : null\r\n            }\r\n            \r\n            {/* 用户收藏的歌单 */}\r\n            {likePlayList && likePlayList.length ? <>\r\n                <div className=\"playlist\">\r\n                {userInfo ? (user && user.userId === uid ? '我' : userInfo.profile.nickname) : null}收藏的歌单\r\n                <span className=\"r\"></span>\r\n                （{likePlayList.length}）\r\n            </div>\r\n            <div className=\"list-wrap\">\r\n                {likePlayList ? likePlayList.map(p => <PlayItem item={p} key={p.id}></PlayItem>) : null}\r\n            </div></> : null}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserHome);\r\n","export default __webpack_public_path__ + \"static/media/loading.4c0ea1e7.svg\";"],"sourceRoot":""}
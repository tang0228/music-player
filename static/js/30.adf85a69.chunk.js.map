{"version":3,"sources":["pages/User/modules/user-update/UserUpdate.jsx"],"names":["tabs","text","key","connect","state","user","dispatch","addUser","addUserAction","props","uid","userId","useState","gender","sex","setSex","nickname","name","setName","birthday","birth","setBirth","signature","intro","setIntro","dateChange","useCallback","date","dateStr","time","Date","getTime","save","a","updateUserInfo","city","province","code","Toast","success","content","duration","getUserDetail","r","profile","localStorage","setItem","JSON","stringify","tabpanes","map","tab","itemKey","className","type","defaultActiveKey","value","onChange","val","maxCount","showCounter","e","target","showClear","onClick","src","avatarUrl","alt"],"mappings":"qPAkBMA,EAAO,CACZ,CAAEC,KAAM,2BAAQC,IAAK,KACrB,CAAED,KAAM,2BAAQC,IAAK,KACrB,CAAED,KAAM,2BAAQC,IAAK,MAoHPC,uBAjHS,SAACC,GACxB,MAAO,CACNC,KAAMD,EAAMC,SAGa,SAACC,GAC3B,MAAO,CACNC,QAAS,kBAAaD,EAASE,IAAa,WAAb,kBA0GlBL,EAtGf,SAAoBM,GACnB,IAAQJ,EAAkBI,EAAlBJ,KAAME,EAAYE,EAAZF,QACRG,EAAML,EAAKM,OACjB,EAAsBC,mBAASP,EAAKQ,QAApC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAwBH,mBAASP,EAAKW,UAAtC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BN,mBAASP,EAAKc,UAAxC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BT,mBAASP,EAAKiB,WAAxC,mBAAOC,EAAP,KAAcC,EAAd,KAYMC,EAAaC,uBAAY,SAACC,EAAMC,GACrC,IAAMC,EAAO,IAAIC,KAAKF,GAASG,UAC/BV,EAASQ,KACP,IAEGG,EAAON,sBAAW,sBAAC,4BAAAO,EAAA,sEACNC,YAAe,CAChCrB,OAAQC,EACRE,SAAUC,EACVE,SAAUC,EACVE,UAAWC,EACXY,KAAM,OACNC,SAAU,OAPa,UASP,MATO,OAShBC,KATgB,uBAUvBC,IAAMC,QAAQ,CACbC,QAAS,2BACTC,SAAU,IAZY,SAcPC,YAAc,CAC7BhC,QAfsB,OAiBR,OAHTiC,EAdiB,QAiBjBN,OAEL9B,EAAQoC,EAAEC,SACVC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUL,EAAEC,WApBxB,2CAuBtB,CAAC9B,EAAKG,EAAMG,EAAOG,EAAOb,IACvBuC,EAAWjD,EAAKkD,KAAI,SAACC,GAAD,OACzB,cAAC,IAAD,CAAuBA,IAAKA,EAAIlD,KAAMmD,QAASD,EAAIjD,KAArCiD,EAAIjD,QAEnB,OACC,sBAAKmD,UAAU,wBAAf,UACC,oBAAIA,UAAU,QAAd,sCACA,qBAAKA,UAAU,YAAf,SACC,cAAC,IAAD,CAAMC,KAAK,OAAOC,iBAAiB,IAAnC,SACEN,MAGH,sBAAKI,UAAU,WAAf,UACC,sBAAKA,UAAU,cAAf,UACC,sBAAKA,UAAU,MAAf,UACC,sBAAMA,UAAU,QAAhB,2BACA,cAAC,IAAD,CAAOG,MAAOvC,EAAMwC,SAvDC,SAAAC,GACzBxC,EAAQwC,SAwDL,sBAAKL,UAAU,MAAf,UACC,sBAAMA,UAAU,QAAhB,2BACA,cAAC,IAAD,CACCG,MAAOjC,EACPoC,SAAU,IACVC,aAAW,EACXH,SA5Da,SAAAC,GAClBlC,EAASkC,SA8DN,sBAAKL,UAAU,MAAf,UACC,sBAAMA,UAAU,QAAhB,2BACA,eAAC,IAAD,CAAYG,MAAO1C,EAAK2C,SA7DH,SAAAI,GACzB9C,EAAO8C,EAAEC,OAAON,QA4DZ,UACC,cAAC,IAAD,CAAOA,MAAO,EAAd,oBACA,cAAC,IAAD,CAAOA,MAAO,EAAd,oBACA,cAAC,IAAD,CAAOA,MAAO,EAAd,gCAGF,sBAAKH,UAAU,MAAf,UACC,sBAAMA,UAAU,QAAhB,2BACA,cAAC,IAAD,CACCG,MAAOpC,EACPqC,SAAUhC,EACVsC,WAAW,OAGb,qBAAKV,UAAU,WAAf,SACC,cAAC,IAAD,CAAQW,QAAShC,EAAjB,+BAGF,sBAAKqB,UAAU,cAAf,UACC,qBAAKY,IAAK5D,EAAK6D,UAAWC,IAAI,KAC9B,sBAAMd,UAAU,KAAhB","file":"static/js/30.adf85a69.chunk.js","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport \"./userUpdate.less\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tTabs,\r\n\tTabPane,\r\n\tInput,\r\n\tTextArea,\r\n\tRadioGroup,\r\n\tRadio,\r\n\tDatePicker,\r\n\tButton,\r\n\tToast,\r\n} from \"@douyinfe/semi-ui\";\r\nimport { updateUserInfo, getUserDetail } from \"../../../../services/apis\";\r\nimport { addUserAction } from \"../../../../store/actions/user\";\r\n\r\n// 搜索的tabs\r\nconst tabs = [\r\n\t{ text: \"基本设置\", key: \"1\" },\r\n\t{ text: \"绑定设置\", key: \"2\" },\r\n\t{ text: \"隐私设置\", key: \"3\" },\r\n];\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddUser: (...args) => dispatch(addUserAction(...args)),\r\n\t};\r\n};\r\n\r\nfunction UserUpdate(props) {\r\n\tconst { user, addUser } = props;\r\n\tconst uid = user.userId;\r\n\tconst [sex, setSex] = useState(user.gender); // 性别\r\n\tconst [name, setName] = useState(user.nickname); // 昵称\r\n\tconst [birth, setBirth] = useState(user.birthday); // 生日\r\n\tconst [intro, setIntro] = useState(user.signature); // 介绍\r\n\tconst handleValueChange = val => {\r\n\t\tsetName(val);\r\n\t};\r\n\tconst textChange = val => {\r\n\t\tsetIntro(val);\r\n\t};\r\n\t// 切花性别 radio\r\n\tconst handleRadioChange = e => {\r\n\t\tsetSex(e.target.value);\r\n\t};\r\n\t// 日期改变\r\n\tconst dateChange = useCallback((date, dateStr) => {\r\n\t\tconst time = new Date(dateStr).getTime();\r\n\t\tsetBirth(time);\r\n\t}, []);\r\n\t// 保存\r\n\tconst save = useCallback(async () => {\r\n\t\tconst res = await updateUserInfo({\r\n\t\t\tgender: sex,\r\n\t\t\tnickname: name,\r\n\t\t\tbirthday: birth,\r\n\t\t\tsignature: intro,\r\n\t\t\tcity: 330100,\r\n\t\t\tprovince: 330000,\r\n\t\t});\r\n\t\tif (res.code === 200) {\r\n\t\t\tToast.success({\r\n\t\t\t\tcontent: \"保存成功\",\r\n\t\t\t\tduration: 2,\r\n\t\t\t});\r\n\t\t\tconst r = await getUserDetail({\r\n\t\t\t\tuid,\r\n\t\t\t});\r\n\t\t\tif (r.code === 200) {\r\n\t\t\t\t// 更新用户信息 本地\r\n\t\t\t\taddUser(r.profile);\r\n\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(r.profile));\r\n\t\t\t}\r\n\t\t}\r\n\t}, [sex, name, birth, intro, uid]);\r\n\tconst tabpanes = tabs.map((tab) => (\r\n\t\t<TabPane key={tab.key} tab={tab.text} itemKey={tab.key}></TabPane>\r\n\t));\r\n\treturn (\r\n\t\t<div className=\"user-update-container\">\r\n\t\t\t<h2 className=\"title\">个人设置</h2>\r\n\t\t\t<div className=\"user-tabs\">\r\n\t\t\t\t<Tabs type=\"card\" defaultActiveKey=\"1\">\r\n\t\t\t\t\t{tabpanes}\r\n\t\t\t\t</Tabs>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"user-box\">\r\n\t\t\t\t<div className=\"update-wrap\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<span className=\"label\">昵称:</span>\r\n\t\t\t\t\t\t<Input value={name} onChange={handleValueChange}></Input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<span className=\"label\">介绍:</span>\r\n\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\tvalue={intro}\r\n\t\t\t\t\t\t\tmaxCount={300}\r\n\t\t\t\t\t\t\tshowCounter\r\n\t\t\t\t\t\t\tonChange={textChange}\r\n\t\t\t\t\t\t></TextArea>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<span className=\"label\">性别:</span>\r\n\t\t\t\t\t\t<RadioGroup value={sex} onChange={handleRadioChange}>\r\n\t\t\t\t\t\t\t<Radio value={1}>男</Radio>\r\n\t\t\t\t\t\t\t<Radio value={2}>女</Radio>\r\n\t\t\t\t\t\t\t<Radio value={0}>保密</Radio>\r\n\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<span className=\"label\">生日:</span>\r\n\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\tvalue={birth}\r\n\t\t\t\t\t\t\tonChange={dateChange}\r\n\t\t\t\t\t\t\tshowClear={false}\r\n\t\t\t\t\t\t></DatePicker>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"btn-wrap\">\r\n\t\t\t\t\t\t<Button onClick={save}>保存</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"user-avatar\">\r\n\t\t\t\t\t<img src={user.avatarUrl} alt=\"\" />\r\n\t\t\t\t\t<span className=\"bg\">更换头像</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserUpdate);\r\n"],"sourceRoot":""}
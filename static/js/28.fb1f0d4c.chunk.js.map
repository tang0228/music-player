{"version":3,"sources":["assets/loading.svg","pages/User/modules/user-home/playItem.module.less","pages/User/modules/user-home/RecordItem.jsx","pages/User/modules/user-home/PlayItem.jsx","pages/User/modules/user-home/UserHome.jsx"],"names":["module","exports","connect","state","song","dispatch","addSong","addSongAction","props","record","index","showNum","play","id","a","getMusicPlayUrl","res","code","data","url","localStorage","setItem","JSON","stringify","className","utils","isEven","onClick","to","name","ar","map","i","style","width","score","playCount","PlayItem","item","history","useHistory","title","push","height","debounce","placeholder","src","loadingUrl","coverImgUrl","alt","parseInt","user","location","useLocation","uid","qs","parse","search","useState","userInfo","setUserInfo","type","setType","recordList","setRecordList","playList","setPlayList","likePlayList","setLikePlayList","useEffect","getUserDetail","getUserRecord","weekData","allData","getUserPlayList","playlist","filter","p","userId","profile","avatarUrl","nickname","gender","level","icon","eventCount","follows","followeds","signature","length","content","padding","slice","r"],"mappings":"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","file":"static/js/28.fb1f0d4c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.4c0ea1e7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"play-item-wrap\":\"playItem_play-item-wrap__3YN8x\"};","import React from \"react\";\r\nimport \"./recordItem.less\";\r\nimport {\r\n  IconPlayCircle,\r\n  IconPlus,\r\n  IconFolder,\r\n  IconForward,\r\n  IconDownload,\r\n} from \"@douyinfe/semi-icons\";\r\nimport utils from \"../../../../utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getMusicPlayUrl } from \"../../../../services/apis\";\r\nimport { connect } from \"react-redux\";\r\nimport { addSongAction } from \"../../../../store/actions/song\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        song: state.song,\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addSong: (...args) => dispatch(addSongAction(...args)),\r\n    }\r\n}\r\n\r\nfunction RecordItem(props) {\r\n  const { record, index, addSong, showNum } = props;\r\n  // 播放歌曲\r\n  const play = async (id) => {\r\n      const res = await getMusicPlayUrl({id});\r\n      if(res.code === 200) {\r\n          addSong(res.data[0].url);\r\n          localStorage.setItem(\"song_url\", JSON.stringify(res.data[0].url));\r\n      }\r\n  }\r\n  return (\r\n    <li className={utils.isEven(index) ? \"record-item even\" : \"record-item\"}>\r\n      <div className=\"hd\">\r\n        <span className=\"hd-index\">{index}.</span>\r\n        <IconPlayCircle onClick={() => {\r\n            play(record.song.id)\r\n        }} />\r\n      </div>\r\n      <div className=\"singer\">\r\n        <Link to={'/find/song?id=' + record.song.id} className=\"music-name\">{record.song.name}</Link>\r\n        <span className=\"divider\">-</span>\r\n        <span className=\"singer-name\">\r\n          {record.song.ar.map((a, i) => (\r\n            <Link className=\"name\" to={'/find/artist?id=' + a.id} key={a.name}>{i === 0 ? a.name : \"/\" + a.name}</Link>\r\n          ))}\r\n        </span>\r\n      </div>\r\n      <div className=\"operates\">\r\n        <IconPlus />\r\n        <IconFolder />\r\n        <IconForward />\r\n        <IconDownload />\r\n      </div>\r\n      <div className=\"tops\">\r\n        <span\r\n          className=\"bg\"\r\n          style={{\r\n            width: `${record.score}%`,\r\n          }}\r\n        ></span>\r\n        {showNum ? <span className=\"text\">{record.playCount}次</span> : null }\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordItem);\r\n","import React from \"react\";\r\nimport style from \"./playItem.module.less\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport loadingUrl from \"@/assets/loading.svg\";\r\n\r\nexport default function PlayItem(props) {\r\n\tconst item = props.item;\r\n\tconst history = useHistory();\r\n\treturn (\r\n\t\t<div className={style[\"play-item-wrap\"]}>\r\n\t\t\t<div className=\"img-wrap\" title={item.name} onClick={() => {\r\n\t\t\t\thistory.push(\"/find/playlist/detail?id=\" + item.id)\r\n\t\t\t}}>\r\n\t\t\t\t<LazyLoad height={140} debounce={500} placeholder={<img src={loadingUrl} />}>\r\n\t\t\t\t\t<img src={item.coverImgUrl} alt=\"\" />\r\n\t\t\t\t\t<span className=\"mask\"></span>\r\n\t\t\t\t</LazyLoad>\r\n\t\t\t\t<div className=\"bottom\">\r\n\t\t\t\t\t<i className=\"icon-heard\"></i>\r\n\t\t\t\t\t<i className=\"icon-play\" title=\"播放\"></i>\r\n\t\t\t\t\t<span className=\"play-nums\">\r\n\t\t\t\t\t\t{item.playCount > 10000 ? parseInt(item.playCount / 10000) + '万' : item.playCount}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"name\" onClick={() => {\r\n\t\t\t\thistory.push(\"/find/playlist/detail?id=\" + item.id)\r\n\t\t\t}}>{item.name}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport \"./userHome.less\";\r\nimport qs from \"query-string\";\r\nimport { getUserDetail, getUserRecord, getUserPlayList } from \"../../../../services/apis\";\r\nimport { Button, Popover } from \"@douyinfe/semi-ui\";\r\nimport { IconPlus, IconFemale, IconMale, IconComment, IconWeibo, IconInfoCircle, IconChevronRight } from \"@douyinfe/semi-icons\";\r\nimport RecordItem from './RecordItem';\r\nimport PlayItem from './PlayItem';\r\nimport { connect } from \"react-redux\";\r\nimport LazyLoad from 'react-lazyload';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n};\r\nfunction UserHome(props) {\r\n    const {user} = props;\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const uid = +qs.parse(location.search).uid; // 用户id\r\n    const [userInfo, setUserInfo] = useState(null); // 用户信息\r\n    const [type, setType] = useState(1); // week or all\r\n    const [recordList, setRecordList] = useState([]); // 播放记录\r\n    const [playList, setPlayList] = useState([]); // 用户的歌单\r\n    const [likePlayList, setLikePlayList] = useState([]); // 用户收藏的歌单\r\n\r\n    //获取用户信息\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await getUserDetail({\r\n                uid\r\n            });\r\n            if(res.code === 200) {\r\n                setUserInfo(res)\r\n            }\r\n        })();\r\n        return () => {\r\n        }\r\n    }, [uid]);\r\n\r\n    // 获取用户的播放记录\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await getUserRecord({\r\n                uid,\r\n                type,\r\n            });\r\n            if(res && res.code === 200) {\r\n                if(type === 1) {\r\n                    setRecordList(res.weekData);\r\n                } else if(type === 0) {\r\n                    setRecordList(res.allData);\r\n                }\r\n            } else {\r\n                setRecordList([]);\r\n            }\r\n        })();\r\n        return () => {\r\n        }\r\n    }, [uid, type]);\r\n\r\n    //获取用户歌单\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await getUserPlayList({\r\n                uid,\r\n            });\r\n            if(res.code === 200) {\r\n                let playList = res.playlist.filter(p => p.userId === uid);\r\n                let likePlayList = res.playlist.filter(p => p.userId !== uid);\r\n                setPlayList(playList);\r\n                setLikePlayList(likePlayList);\r\n            }\r\n        })();\r\n        return () => {\r\n        }\r\n    }, [uid])\r\n    return (\r\n        <div className=\"user-home-container\">\r\n            { userInfo ? <div className=\"user-info\">\r\n                <div className=\"img\">\r\n                    <LazyLoad>\r\n                        <img src={userInfo.profile.avatarUrl} alt=\"\" />\r\n                    </LazyLoad>\r\n                </div>\r\n                <div className=\"info-content\">\r\n                    <div className=\"name-wrap\">\r\n                        <span className=\"name\">{userInfo.profile.nickname}</span>\r\n                        <span className={userInfo.profile.gender === 1 ? 'level blue' : 'level pink'}>LV. {userInfo.level} {userInfo.profile.gender === 1 ? <IconMale /> : <IconFemale /> }</span>\r\n                        {user && user.userId === uid ? <Button type=\"tertiary\" onClick={() => {\r\n                            history.push(`/user/update?uid=${uid}`)\r\n                        }}>编辑个人资料</Button> : <div className=\"btns\">\r\n                            <Button icon={<IconComment />} type=\"tertiary\">发私信</Button>\r\n                            <Button icon={<IconPlus />} >关注</Button>\r\n                        </div>}\r\n                    </div>\r\n                    <div className=\"user-nums\">\r\n                        <div className=\"box\">\r\n                            <span>{userInfo.profile.eventCount}</span>\r\n                            <span>动态</span>\r\n                        </div>\r\n                        <div className=\"box\">\r\n                            <span>{userInfo.profile.follows}</span>\r\n                            <span>关注</span>\r\n                        </div>\r\n                        <div className=\"box\">\r\n                            <span>{userInfo.profile.followeds}</span>\r\n                            <span>粉丝</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"item\">个人介绍：{userInfo.profile.signature}</div>\r\n                    {/* <div className=\"user-city\">\r\n                        <span className=\"item\">所在地区：浙江省 - 杭州市</span>\r\n                        <span className=\"item\">年龄：00后</span>\r\n                    </div> */}\r\n                    <div className=\"item\">社交网络：<IconWeibo /></div>\r\n                </div>\r\n            </div> : null}\r\n            {/* 用户的播放记录，当前用户才可以访问 */}\r\n            {\r\n                recordList && recordList.length ? <>\r\n                <div className=\"record-header\">\r\n                    <h3>听歌排行</h3>\r\n                    <h4>累计听歌{recordList.length}首</h4>\r\n                    <Popover content={\r\n                        <div style={{\r\n                            padding: 12,\r\n                        }}>实际播放时间过短的歌曲将不纳入计算。</div>\r\n                    }>\r\n                        <IconInfoCircle />\r\n                    </Popover>\r\n                    <div className=\"nav\">\r\n                        <span className={type === 1 ? 'item active' : 'item'} onClick={()=>{\r\n                            setType(1);\r\n                        }}>最近一周</span>\r\n                        <span className=\"line\">|</span>\r\n                        <span className={type === 0 ? 'item active' : 'item'} onClick={() => {\r\n                            setType(0);\r\n                        }}>所有时间</span>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"record-list\">\r\n                    {recordList ? recordList.slice(0, 10).map((r, i) => <RecordItem key={r.song.id} record={r} index={i + 1} showNum={user.userId === uid}></RecordItem>) : null}\r\n                </ul>\r\n                <div className=\"more\">查看更多<IconChevronRight /></div>\r\n                </> : null\r\n            }\r\n            {/* 用户创建的歌单 */}\r\n            {\r\n                playList && playList.length ? <>\r\n                <div className=\"playlist\">\r\n                {userInfo ? (user && user.userId === uid ? '我' : userInfo.profile.nickname) : null}创建的歌单\r\n                <span className=\"r\"></span>\r\n                （{playList.length}）\r\n            </div>\r\n            <div className=\"list-wrap\">\r\n                {playList ? playList.map(p => <PlayItem item={p} key={p.id}></PlayItem>) : null}\r\n            </div>\r\n                </> : null\r\n            }\r\n            \r\n            {/* 用户收藏的歌单 */}\r\n            {likePlayList && likePlayList.length ? <>\r\n                <div className=\"playlist\">\r\n                {userInfo ? (user && user.userId === uid ? '我' : userInfo.profile.nickname) : null}收藏的歌单\r\n                <span className=\"r\"></span>\r\n                （{likePlayList.length}）\r\n            </div>\r\n            <div className=\"list-wrap\">\r\n                {likePlayList ? likePlayList.map(p => <PlayItem item={p} key={p.id}></PlayItem>) : null}\r\n            </div></> : null}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserHome);\r\n"],"sourceRoot":""}
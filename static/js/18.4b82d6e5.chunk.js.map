{"version":3,"sources":["components/Commit/index.jsx","components/Commit/index.module.less","components/CommitList/commitList.module.less","services/comment.js","components/CommitList/Item.jsx","components/CommitList/CommitList.jsx","pages/Find/modules/playListDetail/TableItem.jsx","pages/Album/AlbumDetail/index.module.less","pages/Album/AlbumDetail/detailLeft.module.less","pages/Album/AlbumDetail/detailRight.module.less","pages/Album/AlbumDetail/DetailLeft.jsx","pages/Album/AlbumDetail/DetailRight.jsx","pages/Album/AlbumDetail/index.jsx"],"names":["connect","state","user","props","useState","commitText","setCommitText","className","style","commit","id","commitNum","src","avatarUrl","alt","placeholder","value","onChange","val","maxCount","commitLength","onClick","Toast","warning","content","duration","module","exports","comment","a","t","type","commentId","timestamp","ins","post","res","likeComment","cid","threadId","c","to","userId","height","debounce","width","nickname","beReplied","length","map","be","beRepliedCommentId","timeStr","delComment","liked","commentLike","likedCount","CommitList","total","comments","hotComments","like","del","song","dispatch","addSong","addSongAction","setCurSongId","setCurSongIdAction","item","index","showAlbum","play","getMusicPlayUrl","code","data","url","utils","isEven","name","alia","mv","formatTime","dt","ar","e","i","al","DetailLeft","albumDetail","songs","open","setOpen","page","setPage","limit","setLimit","setTotal","setComments","setHotComments","loading","setLoading","albumCommit","success","getCommits","getAlbumCommit","offset","Date","now","useEffect","picUrl","alias","artists","formatDate","publishTime","company","icon","info","shareCount","goAnchor","commentCount","description","split","join","splice","image","darkModeImage","padding","size","TableItem","Commit","currentPage","onPageChange","showSizeChanger","pageSize","pageSizeOpts","onPageSizeChange","spinning","tip","position","top","left","transform","zIndex","DetailRight","artistId","hotAlbums","setHotAlbums","getArtistAlbums","l","AlbumDetail","location","useLocation","qs","parse","search","setSongs","setAlbumDetail","getAlbum","album","artist"],"mappings":"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","file":"static/js/18.4b82d6e5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./index.module.less\";\r\nimport { TextArea, Button, Toast } from \"@douyinfe/semi-ui\";\r\n// import Picker from \"emoji-picker-react\";\r\nimport { connect } from \"react-redux\";\r\n// import { IconImage } from \"@douyinfe/semi-icons\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user,\r\n\t};\r\n};\r\n\r\nfunction Commit(props) {\r\n\tconst user = props.user;\r\n\t// const [showEmoji, setShowEmoji] = useState(false);\r\n\tconst [commitText, setCommitText] = useState(\"\");// 评论内容\r\n\t// const onEmojiClick = (e, emo) => {\r\n\t//   //   setEmoText(emo.emoji);\r\n\t//   //   setCommitText(emo.names[0] + commitText);\r\n\t// };\r\n\tconst handleValueChange = (val) => {\r\n\t\tsetCommitText(val);\r\n\t}\r\n\t// const showEmojiSelect = () => {\r\n\t//   setShowEmoji(!showEmoji);\r\n\t// };\r\n\tconst commit = () => {\r\n\t\tif (!user) {\r\n\t\t\tToast.warning(\"请先登录再评论哦\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!commitText) {\r\n\t\t\tToast.warning({\r\n\t\t\t\tcontent: \"请先输入内容哦😊\",\r\n\t\t\t\tduration: 2\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// 回传给父组件\r\n\t\tsetCommitText(\"\"); // 输入框清空\r\n\t\tprops.commit && props.commit(commitText)\r\n\t}\r\n\treturn (\r\n\t\t<div className={style.commit} id=\"comment\">\r\n\t\t\t<div className=\"commit-header\">\r\n\t\t\t\t<h3 className=\"title\">评论</h3>\r\n\t\t\t\t<span className=\"nums\">共{props.commitNum}条评论</span>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"commit-wrap\">\r\n\t\t\t\t<img src={user ? user.avatarUrl : 'http://s4.music.126.net/style/web2/img/default/default_avatar.jpg?param=50y50'} alt=\"\" />\r\n\t\t\t\t<div className=\"commit-content\">\r\n\t\t\t\t\t<TextArea placeholder=\"评论\" value={commitText} onChange={handleValueChange} maxCount={props.commitLength}></TextArea>\r\n\t\t\t\t\t<div className=\"commit-opearte\">\r\n\t\t\t\t\t\t{/* <IconImage onClick={showEmojiSelect} /> */}\r\n\t\t\t\t\t\t<Button onClick={commit}>评论</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* {showEmoji ? (\r\n            <div className=\"emoji-box\">\r\n              <Picker onEmojiClick={onEmojiClick} />\r\n            </div>\r\n          ) : null} */}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nCommit.propTypes = {\r\n\tcommitNum: PropTypes.number, // 评论数量\r\n\tcommitLength: PropTypes.number, // 评论内容限制长度\r\n};\r\n\r\nexport default connect(mapStateToProps)(Commit);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commit\":\"index_commit__msAm_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment-list\":\"commitList_comment-list__JzpVv\"};","import ins from \"./request\";\r\n\r\n/**\r\n * 新版获取评论列表\r\n * 资源 id, 如歌曲 id,mv id\r\n * type: 数字  0: 歌曲 1: mv 2: 歌单 3: 专辑 4: 电台 5: 视频 6: 动态\r\n * pageNo:分页参数,第 N 页,默认为 1\r\n * pageSize:分页参数,每页多少条数据,默认 20\r\n * sortType: 排序方式, 1:按推荐排序, 2:按热度排序, 3:按时间排序\r\n * cursor: 当sortType为 3 时且页数不是第一页时需传入,值为上一条数据的 time\r\n */\r\nexport async function getCommentList({id, type, pageNo = 1, pageSize = 20, timestamp}) {\r\n    const res = await ins.get(\"/comment/new\", {\r\n        params: {\r\n            id,\r\n            type, \r\n            pageNo, \r\n            pageSize,\r\n            timestamp\r\n        }\r\n    });\r\n    return res;\r\n};\r\n\r\n/**\r\n * 发送（回复）评论\r\n */\r\nexport async function comment({t, type, id, content, commentId, timestamp}) {\r\n    const res = await ins.post(\"/comment\", {\r\n            t, type, id, content, commentId, timestamp\r\n    });\r\n    return res;\r\n};\r\n\r\n// 给评论点赞\r\nexport async function likeComment({id, cid, t, type, threadId, timestamp }) {\r\n    const res = await ins.post(\"/comment/like\", {\r\n        id, cid, t, type, threadId, timestamp\r\n    });\r\n    return res;\r\n};\r\n","import React from \"react\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IconLikeThumb } from \"@douyinfe/semi-icons\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n};\r\n\r\nfunction Item(props) {\r\n\tconst { c, user } = props;\r\n\treturn (\r\n\t\t<li className=\"comment-item\" key={c.commentId}>\r\n\t\t\t<Link to={\"/user/home?uid=\" + c.user.userId}>\r\n\t\t\t\t<LazyLoad height={50} debounce={500} placeholder={<img width={50} height={50} src=\"http://s4.music.126.net/style/web2/img/default/default_avatar.jpg?param=50y50\" />}>\r\n\t\t\t\t\t<img src={c.user.avatarUrl} alt=\"\" />\r\n\t\t\t\t</LazyLoad>\r\n\t\t\t</Link>\r\n\t\t\t<div className=\"comment-desc\">\r\n\t\t\t\t<p className=\"comment-content\">\r\n\t\t\t\t\t<Link className=\"name\" to={\"/user/home?uid=\" + c.user.userId}>\r\n\t\t\t\t\t\t{c.user.nickname}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<span className=\"divider\">:</span>\r\n\t\t\t\t\t<span className=\"content\">{c.content}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t{/* 回复评论列表 */}\r\n\t\t\t\t{c.beReplied.length\r\n\t\t\t\t\t? c.beReplied.map((be) => (\r\n\t\t\t\t\t\t<div key={be.beRepliedCommentId} className=\"beReplied\">\r\n\t\t\t\t\t\t\t<p className=\"comment-content\">\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tclassName=\"name\"\r\n\t\t\t\t\t\t\t\t\tto={\"/user/home?uid=\" + be.user.userId}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{be.user.nickname}\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t<span className=\"divider\">:</span>\r\n\t\t\t\t\t\t\t\t<span className=\"content\">{be.content}</span>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t\t: null}\r\n\t\t\t\t<div className=\"comment-points\">\r\n\t\t\t\t\t<span className=\"time\">{c.timeStr}</span>\r\n\t\t\t\t\t<div className=\"operate\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tuser && c.user.userId === user.userId ? <span className=\"del-wrap\">\r\n\t\t\t\t\t\t\t\t<span className=\"reback\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\tprops.delComment && props.delComment(c.commentId)\r\n\t\t\t\t\t\t\t\t}}>删除</span>\r\n\t\t\t\t\t\t\t\t<span className=\"line\">|</span>\r\n\t\t\t\t\t\t\t</span> : null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<span className={c.liked ? 'like liked' : 'like'} onClick={() => {\r\n\t\t\t\t\t\t\tprops.commentLike && props.commentLike(c.commentId, c.liked)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<IconLikeThumb />\r\n\t\t\t\t\t\t\t{c.likedCount ? (\r\n\t\t\t\t\t\t\t\t<span className=\"num\">({c.likedCount})</span>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"line\">|</span>\r\n\t\t\t\t\t\t<span className=\"reback\">回复</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\nexport default connect(mapStateToProps)(Item);\r\n","import React from \"react\";\r\nimport style from \"./commitList.module.less\";\r\nimport Item from \"./Item\"\r\n\r\nexport default function CommitList(props) {\r\n  const { total, comments, hotComments } = props;\r\n  const commentLike = (cid, liked) => {\r\n      props.like && props.like(cid, liked);\r\n  };\r\n  const delComment = (cid) => {\r\n      props.del && props.del(cid);\r\n  };\r\n  return (\r\n    <div className={style[\"comment-list\"]}>\r\n      {hotComments && hotComments.length ? (\r\n        <ul className=\"comment\">\r\n          <li className=\"header\">\r\n            <h3 className=\"title\">精彩评论</h3>\r\n          </li>\r\n          {hotComments.map((c) => (\r\n            <Item commentLike={commentLike} delComment={delComment} key={c.commentId} c={c}></Item>\r\n          ))}\r\n        </ul>\r\n      ) : null}\r\n      <br />\r\n      <br />\r\n      {comments && comments.length ? (\r\n        <ul className=\"comment\">\r\n          <li className=\"header\">\r\n            <h3 className=\"title\">最新评论({total})</h3>\r\n          </li>\r\n          {comments.map((c) => (\r\n            <Item commentLike={commentLike} delComment={delComment} key={c.commentId} c={c}></Item>\r\n          ))}\r\n        </ul>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./tableItem.less\";\r\nimport utils from \"../../../../utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getMusicPlayUrl } from \"../../../../services/apis\";\r\nimport { connect } from \"react-redux\";\r\nimport { addSongAction } from \"../../../../store/actions/song\";\r\nimport { setCurSongIdAction } from \"@/store/actions/curSongId\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    song: state.song\r\n  }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addSong: (...args) => dispatch(addSongAction(...args)),\r\n    setCurSongId: (...args) => dispatch(setCurSongIdAction(...args))\r\n  };\r\n};\r\nfunction TableItem(props) {\r\n  const { item, index, showAlbum, addSong, setCurSongId } = props;\r\n  // 播放歌曲\r\n  const play = async (id) => {\r\n    const res = await getMusicPlayUrl({ id });\r\n    setCurSongId(id);\r\n    if (res.code === 200 && res.data[0].url) {\r\n      addSong(res.data);\r\n    }\r\n  };\r\n  return (\r\n    <li className={utils.isEven(index) ? \"table-item even\" : \"table-item\"}>\r\n      <div className=\"play-num bd\">\r\n        <span className=\"num\">{index}</span>\r\n        <i className=\"icon-play\" onClick={() => {\r\n          play(item.id)\r\n        }}></i>\r\n      </div>\r\n      <div className=\"title bd ellipsis-1\">\r\n        <Link to={'/find/song?id=' + item.id}>{item.name}</Link>\r\n        {item.alia && item.alia.length ?\r\n          <span className=\"mv-name\">-{item.alia.map(a => a)}</span>\r\n          : null}\r\n        {item.mv ? <Link className=\"icon-mv\" to={'/find/mv?id=' + item.mv}></Link> : null}\r\n      </div>\r\n      <div className=\"duration bd\">\r\n        <span className=\"time\">{utils.formatTime(item.dt)}</span>\r\n        <div className=\"btns\">\r\n          <i className=\"icon icon-add\"></i>\r\n          <i className=\"icon icon-fav\"></i>\r\n          <i className=\"icon icon-share\"></i>\r\n          <i className=\"icon icon-down\"></i>\r\n        </div>\r\n      </div>\r\n      <div className=\"name bd ellipsis-1\">\r\n        {item.ar.map((e, i) => (\r\n          <Link to={'/find/artist?id=' + e.id} key={e.id + i}>{i === 0 ? e.name : `/${e.name}`}</Link>\r\n        ))}\r\n      </div>\r\n      {showAlbum ? <div className=\"album bd ellipsis-1\"><Link to={'/find/album?id=' + item.al.id}>{item.al.name}</Link></div> : null}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableItem);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"album-detail\":\"index_album-detail__1XSbp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail-left\":\"detailLeft_detail-left__20_9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail-right\":\"detailRight_detail-right__Qdz_L\"};","import React, { useEffect, useState } from \"react\";\r\nimport style from \"./detailLeft.module.less\";\r\nimport { getAlbumCommit } from \"../../../services/apis\";\r\nimport { comment } from \"../../../services/comment\";\r\nimport utils from \"../../../utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n\tButton,\r\n\tSpace,\r\n\tEmpty,\r\n\tToast,\r\n\tPagination,\r\n\tSpin,\r\n} from \"@douyinfe/semi-ui\";\r\nimport {\r\n\tIconPlayCircle,\r\n\tIconPlus,\r\n\tIconForward,\r\n\tIconDownload,\r\n\tIconComment,\r\n\tIconChevronUp,\r\n\tIconChevronDown,\r\n} from \"@douyinfe/semi-icons\";\r\nimport {\r\n\tIllustrationConstruction,\r\n\tIllustrationConstructionDark,\r\n} from \"@douyinfe/semi-illustrations\";\r\nimport Commit from \"../../../components/Commit\";\r\nimport CommitList from \"../../../components/CommitList/CommitList\";\r\nimport TableItem from \"../../Find/modules/playListDetail/TableItem\";\r\n\r\nfunction DetailLeft(props) {\r\n\tconst { id, albumDetail, songs } = props;\r\n\tconst [open, setOpen] = useState(false); // 是否收起\r\n\tconst [page, setPage] = useState(1); // 评论列表\r\n\tconst [limit, setLimit] = useState(20); // 页容量\r\n\tconst [total, setTotal] = useState(0); // 总评论数\r\n\tconst [comments, setComments] = useState([]); // 评论列表\r\n\tconst [hotComments, setHotComments] = useState([]); // 热门评论列表\r\n\tconst [loading, setLoading] = useState(false); // loading\r\n\t//评论专辑\r\n\tconst albumCommit = async (val) => {\r\n\t\tconst res = await comment({\r\n\t\t\tt: 1,\r\n\t\t\ttype: 3,\r\n\t\t\tcontent: val,\r\n\t\t\tid: id\r\n\t\t});\r\n\t\tif (res.code === 200) {\r\n\t\t\tToast.success({\r\n\t\t\t\tcontent: \"评论成功\",\r\n\t\t\t\tduration: 2,\r\n\t\t\t});\r\n\t\t\tgetCommits();\r\n\t\t}\r\n\t};\r\n\t// 页码变化\r\n\tconst handlePageChange = (page) => {\r\n\t\tsetPage(page);\r\n\t};\r\n\t// 页容量变化\r\n\tconst handleLimitChange = (limit) => {\r\n\t\tsetLimit(limit);\r\n\t};\r\n\t// 获取评论\r\n\tconst getCommits = async () => {\r\n\t\tsetLoading(true);\r\n\t\tconst res = await getAlbumCommit({\r\n\t\t\tid,\r\n\t\t\tlimit,\r\n\t\t\toffset: (page - 1) * limit,\r\n\t\t\ttimestamp: Date.now()\r\n\t\t});\r\n\t\tif (res.code === 200) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetTotal(res.total);\r\n\t\t\tsetComments(res.comments);\r\n\t\t\tsetHotComments(res.hotComments);\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tgetCommits();\r\n\t\treturn () => { };\r\n\t}, [id, page, limit]);\r\n\r\n\treturn (\r\n\t\t<div className={style[\"detail-left\"]}>\r\n\t\t\t{albumDetail ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"top-content\">\r\n\t\t\t\t\t\t<div className=\"img\">\r\n\t\t\t\t\t\t\t<img src={albumDetail.picUrl} alt=\"\" />\r\n\t\t\t\t\t\t\t<span className=\"album-mask\"></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"list-content\">\r\n\t\t\t\t\t\t\t<div className=\"list-name\">\r\n\t\t\t\t\t\t\t\t<i className=\"icon-album\"></i>\r\n\t\t\t\t\t\t\t\t{albumDetail.name}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"sub-name\">\r\n\t\t\t\t\t\t\t\t{albumDetail.alias.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t<span key={index} className=\"sub-item\">\r\n\t\t\t\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<span className=\"label\">歌手：</span>\r\n\t\t\t\t\t\t\t\t<div className=\"wrap\">\r\n\t\t\t\t\t\t\t\t\t{albumDetail.artists.map((a, i) =>\r\n\t\t\t\t\t\t\t\t\t\ti === 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={a.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"item\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tto={\"/find/artist?id=\" + a.id}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{a.name}\r\n\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<span key={a.id} className=\"divider\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"item\" to={\"/find/artist?id=\" + a.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{a.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<span className=\"label\">发行时间：</span>\r\n\t\t\t\t\t\t\t\t<div className=\"wrap\">\r\n\t\t\t\t\t\t\t\t\t{utils.formatDate(albumDetail.publishTime)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<span className=\"label\">发行公司：</span>\r\n\t\t\t\t\t\t\t\t<div className=\"wrap\">{albumDetail.company}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"operates\">\r\n\t\t\t\t\t\t\t\t<Space>\r\n\t\t\t\t\t\t\t\t\t<Button icon={<IconPlayCircle />}>播放</Button>\r\n\t\t\t\t\t\t\t\t\t<Button type=\"tertiary\" icon={<IconPlus />}>\r\n\t\t\t\t\t\t\t\t\t\t收藏\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button type=\"tertiary\" icon={<IconForward />}>\r\n\t\t\t\t\t\t\t\t\t\t({albumDetail.info.shareCount})\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button type=\"tertiary\" icon={<IconDownload />}>\r\n\t\t\t\t\t\t\t\t\t\t下载\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button type=\"tertiary\" icon={<IconComment />} onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tutils.goAnchor(\"#comment\");\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t({albumDetail.info.commentCount})\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{albumDetail.description ?\r\n\t\t\t\t\t\t<div className=\"desc\">\r\n\t\t\t\t\t\t\t<h3 className=\"title\">专辑介绍：</h3>\r\n\t\t\t\t\t\t\t<p className=\"content\">\r\n\t\t\t\t\t\t\t\t{open\r\n\t\t\t\t\t\t\t\t\t? albumDetail.description.split(\"\\n\\n\").join(\"\\n\")\r\n\t\t\t\t\t\t\t\t\t: albumDetail.description\r\n\t\t\t\t\t\t\t\t\t\t.split(\"\\n\\n\")\r\n\t\t\t\t\t\t\t\t\t\t.join(\"\\n\")\r\n\t\t\t\t\t\t\t\t\t\t.split(\"\\n\")\r\n\t\t\t\t\t\t\t\t\t\t.splice(0, 5)\r\n\t\t\t\t\t\t\t\t\t\t.join(\"\\n\") + \"...\"}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName=\"arrow\"\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetOpen(!open);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<span className=\"text\">{open ? \"收起\" : \"展开\"}</span>\r\n\t\t\t\t\t\t\t\t{open ? <IconChevronUp /> : <IconChevronDown />}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t: null}\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<Empty\r\n\t\t\t\t\timage={\r\n\t\t\t\t\t\t<IllustrationConstruction style={{ width: 150, height: 150 }} />\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdarkModeImage={\r\n\t\t\t\t\t\t<IllustrationConstructionDark style={{ width: 150, height: 150 }} />\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdescription={\"信息丢失\"}\r\n\t\t\t\t\tstyle={{ padding: 30 }}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t<div className=\"music-list\">\r\n\t\t\t\t<div className=\"list-header\">\r\n\t\t\t\t\t<h3 className=\"title\">歌曲列表</h3>\r\n\t\t\t\t\t<span className=\"total\">{albumDetail.size}首歌</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ul className=\"list-wrap\">\r\n\t\t\t\t\t<li className=\"table-header\">\r\n\t\t\t\t\t\t<div className=\"play-num\"></div>\r\n\t\t\t\t\t\t<div className=\"title bd\">歌曲标题</div>\r\n\t\t\t\t\t\t<div className=\"duration bd\">时长</div>\r\n\t\t\t\t\t\t<div className=\"name bd\">歌手</div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t{songs.map((t, i) => (\r\n\t\t\t\t\t\t<TableItem key={t.id} index={i + 1} item={t} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<Commit commitNum={total} commit={albumCommit} commitLength={140} />\r\n\t\t\t<CommitList total={total} comments={comments} hotComments={hotComments} />\r\n\t\t\t{total > 0 ? (\r\n\t\t\t\t<div className=\"pagination-wrapper\">\r\n\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\ttotal={total}\r\n\t\t\t\t\t\tcurrentPage={page}\r\n\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\tshowSizeChanger\r\n\t\t\t\t\t\tpageSize={limit}\r\n\t\t\t\t\t\tpageSizeOpts={[20, 30, 50]}\r\n\t\t\t\t\t\tonPageSizeChange={handleLimitChange}\r\n\t\t\t\t\t></Pagination>\r\n\t\t\t\t</div>\r\n\t\t\t) : null}\r\n\t\t\t<Spin\r\n\t\t\t\tspinning={loading}\r\n\t\t\t\ttip=\"loading...\"\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tposition: \"fixed\",\r\n\t\t\t\t\ttop: \"50%\",\r\n\t\t\t\t\tleft: \"50%\",\r\n\t\t\t\t\ttransform: \"translate(-50%, -50%)\",\r\n\t\t\t\t\tzIndex: \"9999\",\r\n\t\t\t\t}}\r\n\t\t\t></Spin>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default DetailLeft;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport style from \"./detailRight.module.less\";\r\nimport { getArtistAlbums, getAlbum } from \"../../../services/apis\";\r\nimport { Link } from \"react-router-dom\";\r\nimport utils from \"../../../utils\";\r\n\r\nexport default function DetailRight(props) {\r\n  const { id, artistId } = props;\r\n  const [hotAlbums, setHotAlbums] = useState([]);\r\n  // 获取歌手的其他热门专辑\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await getArtistAlbums({ id: artistId });\r\n      if (res.code === 200) {\r\n        setHotAlbums(res.hotAlbums.splice(0, 5));\r\n      }\r\n    })();\r\n    return () => {};\r\n  }, [artistId]);\r\n  return (\r\n    <div className={style[\"detail-right\"]}>\r\n      <div className=\"play-hot\">\r\n        <div className=\"header\">\r\n          <h3 className=\"title\">Ta的其他热门专辑</h3>\r\n          <Link className=\"toPage\" to={'/find/artist?id=' + artistId}>全部&gt;</Link>\r\n        </div>\r\n        <div className=\"hot-content\">\r\n          {hotAlbums && hotAlbums.length\r\n            ? hotAlbums.map((l) => (\r\n                <div key={l.id} className=\"hot-item\">\r\n                  <Link to={\"/find/album?id=\" + l.id}>\r\n                    <img src={l.picUrl} alt=\"\" />\r\n                  </Link>\r\n                  <div className=\"desc\">\r\n                    <Link\r\n                      to={\"/find/album?id=\" + l.id}\r\n                      className=\"sub-title\"\r\n                    >\r\n                      {l.name}\r\n                    </Link>\r\n                    <span className=\"text\">\r\n                      {utils.formatDate(l.publishTime)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport style from \"./index.module.less\";\r\nimport DetailLeft from \"./DetailLeft\";\r\nimport DetailRight from \"./DetailRight\";\r\nimport qs from \"query-string\";\r\nimport { getAlbum } from \"../../../services/apis\";\r\n\r\nexport default function AlbumDetail() {\r\n  const location = useLocation();\r\n  const id = qs.parse(location.search).id; // 专辑id\r\n  const [songs, setSongs] = useState([]);\r\n  const [albumDetail, setAlbumDetail] = useState(null);\r\n  // 获取专辑相关内容\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await getAlbum({ id });\r\n      if (res.code === 200) {\r\n        setAlbumDetail(res.album);\r\n        setSongs(res.songs);\r\n      }\r\n    })();\r\n    return () => {};\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      {albumDetail ? (\r\n        <div className={style[\"album-detail\"]}>\r\n          <div className=\"left\">\r\n            <DetailLeft songs={songs} albumDetail={albumDetail} id={id} />\r\n          </div>\r\n          <div className=\"right\">\r\n            <DetailRight id={id} artistId={albumDetail.artist.id} />\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}